/* 
1. 일반 속성 관계
2.  HAVING
3. PLAYER 테이블에서 선수영문명 2번째 글자가 A인 선수의 한국 이름과 영문명을 출력
4. 3
5. 인라인뷰
*/
/* 6 */
CREATE TABLE department(
    DEPTID NUMBER(10) PRIMARY KEY,
    DEPTNAME VARCHAR2(10),
    LOCATION VARCHAR2(10),
    TEL VARCHAR2(15));
    
DESC department;

CREATE TABLE EMPLOYEE(
    EMPID NUMBER(10) PRIMARY KEY,
    EMPNAME VARCHAR2(10),
    HIREDATE DATE,
    ADDR VARCHAR2(12),
    TEL VARCHAR2(15),
    DEPTID  REFERENCES DEPARTMENT(DEPTID));
    
DESC EMPLOYEE;

/* 7 */
ALTER TABLE EMPLOYEE ADD BIRTHDAY DATE;

DESC EMPLOYEE;

/* 8 */
INSERT INTO DEPARTMENT VALUES (1001, '총무팀', '본101호', '053-777-8777');
INSERT INTO DEPARTMENT VALUES (1002, '회계팀', '본102호', '053-888-9999');
INSERT INTO DEPARTMENT VALUES (1003, '영업팀', '본103호', '053-222-3333');

SELECT * FROM DEPARTMENT;

INSERT INTO EMPLOYEE(EMPID, EMPNAME, HIREDATE, ADDR, TEL, DEPTID) 
VALUES (20121945, '박민수', '2012-03-02', '대구', '010-1111-1234', 1001);
INSERT INTO EMPLOYEE(EMPID, EMPNAME, HIREDATE, ADDR, TEL, DEPTID) 
VALUES (20101817, '박준식', '2010-09-01', '경산', '010-2222-1234', 1003);
INSERT INTO EMPLOYEE(EMPID, EMPNAME, HIREDATE, ADDR, TEL, DEPTID) 
VALUES (20122245, '선아라', '2012-03-02', '대구', '010-3333-1222', 1002);
INSERT INTO EMPLOYEE(EMPID, EMPNAME, HIREDATE, ADDR, TEL, DEPTID) 
VALUES (20121729, '이범수', '2011-03-02', '서울', '010-3333-4444', 1001);
INSERT INTO EMPLOYEE(EMPID, EMPNAME, HIREDATE, ADDR, TEL, DEPTID) 
VALUES (20121646, '이융희', '2012-09-01', '부산', '010-1234-2222', 1003);

SELECT * FROM EMPLOYEE;



/* 9 */
ALTER TABLE EMPLOYEE MODIFY EMPNAME NOT NULL;

DESC EMPLOYEE;

/* 10 */
SELECT EMPNAME, HIREDATE, DEPTID
FROM EMPLOYEE JOIN DEPARTMENT
USING (DEPTID)
WHERE DEPTNAME = '총무팀';

/* 11 */
DELETE FROM EMPLOYEE WHERE ADDR = '대구';

/* 12 */
UPDATE EMPLOYEE SET DEPTID=(SELECT DEPTID FROM DEPARTMENT
WHERE DEPTNAME = '회계팀')
WHERE DEPTID=(SELECT DEPTID FROM DEPARTMENT WHERE DEPTNAME='영업팀');

/* 13 */
SELECT EMPID, EMPNAME, BIRTHDAY, DEPTNAME
FROM EMPLOYEE JOIN DEPARTMENT
USING (DEPTID)
WHERE HIREDATE > (SELECT HIREDATE FROM 
EMPLOYEE WHERE EMPID = 20121729);

/* 14 */
CREATE VIEW EMP_VU_1 
AS SELECT EMPNAME, ADDR, DEPTNAME
FROM EMPLOYEE JOIN DEPARTMENT USING (DEPTID)
WHERE DEPTNAME = '총무팀';

SELECT * FROM EMP_VU_1;

/* SHEET 2 */
/* 1 */
SELECT * FROM EMPLOYEES
WHERE HIRE_DATE > '2001-12-31'
AND
JOB_ID = 'ST_CLERK';

/* 2 */

SELECT LAST_NAME, JOB_ID, SALARY, COMMISSION_PCT
FROM EMPLOYEES
WHERE COMMISSION_PCT IS NOT NULL
ORDER BY SALARY DESC;

/* 3 */
SELECT ROUND(SALARY * 1.1) 'New salary' FROM EMPLOYEES
WHERE COMMISSION_PCT IS NULL;

/* 4 */
SELECT TRUNC((SYSDATE - HIRE_DATE)/365) AS YEARS, 
TRUNC(MONTHS_BETWEEN(SYSDATE, HIRE_DATE) - (TRUNC((SYSDATE-HIRE_DATE)/365) * 12)) AS MONTHS
FROM EMPLOYEES;

/* 5 */
SELECT LAST_NAME
FROM EMPLOYEES
WHERE LAST_NAME LIKE 'J%' 
OR LAST_NAME LIKE 'K%'
OR LAST_NAME LIKE 'L%'
OR LAST_NAME LIKE 'M%';

-- 정규표현식
SELECT LAST_NAME
FROM EMPLOYEES
WHERE REGEXP_LIKE(LAST_NAME, '^(J|K|L|M)');

/* 6 */
SELECT LAST_NAME, SALARY, NVL2(COMMISSION_PCT, 'Yes', 'No') COM
FROM EMPLOYEES;

/* 7 */
SELECT * FROM LOCATIONS;
DESC EMPLOYEES;
DESC DEPARTMENTS;

SELECT D.DEPARTMENT_NAME, E.LAST_NAME, E.JOB_ID, E.SALARY, L.LOCATION_ID
FROM EMPLOYEES E JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
JOIN LOCATIONS L
ON D.LOCATION_ID = L.LOCATION_ID
WHERE L.LOCATION_ID = 1800;

/* 8 */
SELECT COUNT(*)
FROM EMPLOYEES
WHERE LAST_NAME LIKE '%n';

SELECT COUNT(*)
FROM EMPLOYEES
WHERE SUBSTR(LAST_NAME, -1, 1)  = 'n';

/* 9 */
SELECT D.DEPARTMENT_ID, D.DEPARTMENT_NAME, L.LOCATION_ID, COUNT(*)
FROM EMPLOYEES E JOIN DEPARTMENTS D
ON (E.DEPARTMENT_ID = D.DEPARTMENT_ID)
JOIN LOCATIONS L
ON D.LOCATION_ID = L.LOCATION_ID
GROUP BY D.DEPARTMENT_ID, D.DEPARTMENT_NAME, L.LOCATION_ID
ORDER BY D.DEPARTMENT_ID;

SELECT D.department_id, D.department_name, D.location_id, A.nums
FROM (select department_id,count(department_id) as nums
from employees
group by department_id) A JOIN departments D
ON A.department_id = D.department_id
ORDER BY A.nums;

/* 10 */
SELECT JOB_ID
FROM EMPLOYEES
WHERE DEPARTMENT_ID IN (10, 20);

/* 11 */
SELECT JOB_ID, COUNT(JOB_ID)
FROM EMPLOYEES
WHERE DEPARTMENT_ID IN (SELECT DEPARTMENT_ID FROM DEPARTMENTS 
WHERE DEPARTMENT_NAME IN ('Administration', 'Executive'))
GROUP BY JOB_ID;

SELECT DEPARTMENT_ID
FROM EMPLOYEES
WHERE DEPARTMENT_ID IN (SELECT DEPARTMENT_ID FROM DEPARTMENTS WHERE DEPARTMENT_NAME IN ('Administration', 'Executive'));

DESC DEPARTMENTS;

/* 12 */
SELECT LAST_NAME, HIRE_DATE
FROM EMPLOYEES
WHERE TO_CHAR(HIRE_DATE, 'DD') <= 16;

/* 13 */
SELECT LAST_NAME, SALARY, SALARY/1000 AS THOUSANDS
FROM EMPLOYEES;

/* 14 */
 SELECT E.LAST_NAME, M.LAST_NAME, M.SALARY, G.GRADE_LEVEL AS GRA
 FROM EMPLOYEES E JOIN EMPLOYEES M
 ON E.MANAGER_ID = M.EMPLOYEE_ID
 JOIN JOB_GRADES G
 ON M.SALARY BETWEEN G.LOWEST_SAL AND G.HIGHEST_SAL;
 
 /* 15 */
SELECT DEPARTMENT_ID, MIN(SALARY)
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID
HAVING AVG(SALARY) = (SELECT MAX(AVG(SALARY)) FROM EMPLOYEES GROUP BY DEPARTMENT_ID);
